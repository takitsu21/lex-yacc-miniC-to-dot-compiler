Nonterminals useless in grammar

    binary_op


Terminals unused in grammar

    OP


Rules useless in grammar

   76 binary_op: PLUS
   77          | MOINS
   78          | MUL
   79          | DIV
   80          | LSHIFT
   81          | RSHIFT
   82          | BAND
   83          | BOR


State 25 conflicts: 1 shift/reduce
State 45 conflicts: 1 reduce/reduce
State 73 conflicts: 20 reduce/reduce
State 87 conflicts: 1 reduce/reduce
State 131 conflicts: 2 shift/reduce


Grammar

    0 $accept: programme $end

    1 programme: liste_declarations liste_fonctions

    2 liste_declarations: liste_declarations declaration
    3                   | %empty

    4 liste_fonctions: liste_fonctions fonction
    5                | fonction

    6 declaration: type liste_declarateurs ';'

    7 liste_declarateurs: liste_declarateurs ',' declarateur
    8                   | declarateur

    9 declarateur: IDENTIFICATEUR
   10            | declarateur '[' CONSTANTE ']'

   11 fonction: type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions '}'
   12         | EXTERN type IDENTIFICATEUR '(' liste_parms ')' ';'

   13 type: VOID
   14     | INT

   15 create_liste_param: create_liste_param ',' parm
   16                   | parm

   17 liste_parms: liste_parms ',' parm
   18            | create_liste_param
   19            | %empty

   20 parm: INT IDENTIFICATEUR

   21 liste_instructions: liste_instructions instruction
   22                   | %empty

   23 instruction: iteration
   24            | selection
   25            | saut
   26            | affectation ';'
   27            | bloc
   28            | appel

   29 iteration: FOR '(' affectation ';' condition ';' affectation ')' instruction
   30          | WHILE '(' condition ')' instruction

   31 selection: IF '(' condition ')' instruction
   32          | IF '(' condition ')' instruction ELSE instruction
   33          | SWITCH '(' expression ')' instruction
   34          | CASE CONSTANTE ':' instruction
   35          | CASE CONSTANTE ':' instruction saut
   36          | DEFAULT ':' instruction

   37 saut: BREAK ';'
   38     | RETURN ';'
   39     | RETURN expression ';'

   40 affectation: variable '=' expression

   41 bloc: '{' liste_declarations liste_instructions '}'

   42 appel: IDENTIFICATEUR '(' liste_expressions ')' ';'

   43 variable: IDENTIFICATEUR
   44         | tableau

   45 tableau: IDENTIFICATEUR
   46        | tableau '[' expression ']'

   47 expression: '(' expression ')'
   48           | expression PLUS expression
   49           | expression MOINS expression
   50           | expression DIV expression
   51           | expression MUL expression
   52           | expression RSHIFT expression
   53           | expression LSHIFT expression
   54           | expression BAND expression
   55           | expression BOR expression
   56           | MOINS expression
   57           | CONSTANTE
   58           | variable
   59           | IDENTIFICATEUR '(' liste_expressions ')'

   60 liste_expressions: create_expr_liste
   61                  | %empty

   62 create_expr_liste: create_expr_liste ',' expression
   63                  | expression

   64 condition: NOT '(' condition ')'
   65          | condition binary_rel condition
   66          | '(' condition ')'
   67          | expression binary_comp expression

   68 binary_rel: LAND
   69           | LOR

   70 binary_comp: LT
   71            | GT
   72            | GEQ
   73            | LEQ
   74            | EQ
   75            | NEQ


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 11 12 29 30 31 32 33 42 47 59 64 66
    ')' (41) 11 12 29 30 31 32 33 42 47 59 64 66
    ',' (44) 7 15 17 62
    ':' (58) 34 35 36
    ';' (59) 6 12 26 29 37 38 39 42
    '=' (61) 40
    '[' (91) 10 46
    ']' (93) 10 46
    '{' (123) 11 41
    '}' (125) 11 41
    error (256)
    IDENTIFICATEUR <node> (258) 9 11 12 20 42 43 45 59
    CONSTANTE <node> (259) 10 34 35 57
    PLUS <node> (260) 48
    MOINS <node> (261) 49 56
    MUL <node> (262) 51
    DIV <node> (263) 50
    LSHIFT <node> (264) 53
    RSHIFT <node> (265) 52
    BAND <node> (266) 54
    BOR <node> (267) 55
    GEQ <node> (268) 72
    LEQ <node> (269) 73
    EQ <node> (270) 74
    NEQ <node> (271) 75
    NOT <node> (272) 64
    LAND <node> (273) 68
    LOR <node> (274) 69
    LT <node> (275) 70
    GT <node> (276) 71
    FOR (277) 29
    WHILE (278) 30
    IF (279) 31 32
    ELSE (280) 32
    SWITCH (281) 33
    CASE (282) 34 35
    DEFAULT (283) 36
    INT (284) 14 20
    VOID (285) 13
    BREAK (286) 37
    RETURN (287) 38 39
    EXTERN (288) 12
    THEN (289)
    OP (290)
    REL (291)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    programme <node> (48)
        on left: 1
        on right: 0
    liste_declarations <node> (49)
        on left: 2 3
        on right: 1 2 11 41
    liste_fonctions <node> (50)
        on left: 4 5
        on right: 1 4
    declaration <node> (51)
        on left: 6
        on right: 2
    liste_declarateurs <node> (52)
        on left: 7 8
        on right: 6 7
    declarateur <node> (53)
        on left: 9 10
        on right: 7 8 10
    fonction <node> (54)
        on left: 11 12
        on right: 4 5
    type <node> (55)
        on left: 13 14
        on right: 6 11 12
    create_liste_param <node> (56)
        on left: 15 16
        on right: 15 18
    liste_parms <node> (57)
        on left: 17 18 19
        on right: 11 12 17
    parm <node> (58)
        on left: 20
        on right: 15 16 17
    liste_instructions <node> (59)
        on left: 21 22
        on right: 11 21 41
    instruction <node> (60)
        on left: 23 24 25 26 27 28
        on right: 21 29 30 31 32 33 34 35 36
    iteration <node> (61)
        on left: 29 30
        on right: 23
    selection <node> (62)
        on left: 31 32 33 34 35 36
        on right: 24
    saut <node> (63)
        on left: 37 38 39
        on right: 25 35
    affectation <node> (64)
        on left: 40
        on right: 26 29
    bloc <node> (65)
        on left: 41
        on right: 27
    appel <node> (66)
        on left: 42
        on right: 28
    variable <node> (67)
        on left: 43 44
        on right: 40 58
    tableau <node> (68)
        on left: 45 46
        on right: 44 46
    expression <node> (69)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 33 39 40 46 47 48 49 50 51 52 53 54 55 56 62 63 67
    liste_expressions <node> (70)
        on left: 60 61
        on right: 42 59
    create_expr_liste <node> (71)
        on left: 62 63
        on right: 60 62
    condition <node> (72)
        on left: 64 65 66 67
        on right: 29 30 31 32 64 65 66
    binary_rel <node> (73)
        on left: 68 69
        on right: 65
    binary_comp <node> (74)
        on left: 70 71 72 73 74 75
        on right: 67


State 0

    0 $accept: . programme $end

    $default  reduce using rule 3 (liste_declarations)

    programme           go to state 1
    liste_declarations  go to state 2


State 1

    0 $accept: programme . $end

    $end  shift, and go to state 3


State 2

    1 programme: liste_declarations . liste_fonctions
    2 liste_declarations: liste_declarations . declaration

    INT     shift, and go to state 4
    VOID    shift, and go to state 5
    EXTERN  shift, and go to state 6

    liste_fonctions  go to state 7
    declaration      go to state 8
    fonction         go to state 9
    type             go to state 10


State 3

    0 $accept: programme $end .

    $default  accept


State 4

   14 type: INT .

    $default  reduce using rule 14 (type)


State 5

   13 type: VOID .

    $default  reduce using rule 13 (type)


State 6

   12 fonction: EXTERN . type IDENTIFICATEUR '(' liste_parms ')' ';'

    INT   shift, and go to state 4
    VOID  shift, and go to state 5

    type  go to state 11


State 7

    1 programme: liste_declarations liste_fonctions .
    4 liste_fonctions: liste_fonctions . fonction

    INT     shift, and go to state 4
    VOID    shift, and go to state 5
    EXTERN  shift, and go to state 6

    $default  reduce using rule 1 (programme)

    fonction  go to state 12
    type      go to state 13


State 8

    2 liste_declarations: liste_declarations declaration .

    $default  reduce using rule 2 (liste_declarations)


State 9

    5 liste_fonctions: fonction .

    $default  reduce using rule 5 (liste_fonctions)


State 10

    6 declaration: type . liste_declarateurs ';'
   11 fonction: type . IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions '}'

    IDENTIFICATEUR  shift, and go to state 14

    liste_declarateurs  go to state 15
    declarateur         go to state 16


State 11

   12 fonction: EXTERN type . IDENTIFICATEUR '(' liste_parms ')' ';'

    IDENTIFICATEUR  shift, and go to state 17


State 12

    4 liste_fonctions: liste_fonctions fonction .

    $default  reduce using rule 4 (liste_fonctions)


State 13

   11 fonction: type . IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions '}'

    IDENTIFICATEUR  shift, and go to state 18


State 14

    9 declarateur: IDENTIFICATEUR .
   11 fonction: type IDENTIFICATEUR . '(' liste_parms ')' '{' liste_declarations liste_instructions '}'

    '('  shift, and go to state 19

    $default  reduce using rule 9 (declarateur)


State 15

    6 declaration: type liste_declarateurs . ';'
    7 liste_declarateurs: liste_declarateurs . ',' declarateur

    ';'  shift, and go to state 20
    ','  shift, and go to state 21


State 16

    8 liste_declarateurs: declarateur .
   10 declarateur: declarateur . '[' CONSTANTE ']'

    '['  shift, and go to state 22

    $default  reduce using rule 8 (liste_declarateurs)


State 17

   12 fonction: EXTERN type IDENTIFICATEUR . '(' liste_parms ')' ';'

    '('  shift, and go to state 23


State 18

   11 fonction: type IDENTIFICATEUR . '(' liste_parms ')' '{' liste_declarations liste_instructions '}'

    '('  shift, and go to state 19


State 19

   11 fonction: type IDENTIFICATEUR '(' . liste_parms ')' '{' liste_declarations liste_instructions '}'

    INT  shift, and go to state 24

    $default  reduce using rule 19 (liste_parms)

    create_liste_param  go to state 25
    liste_parms         go to state 26
    parm                go to state 27


State 20

    6 declaration: type liste_declarateurs ';' .

    $default  reduce using rule 6 (declaration)


State 21

    7 liste_declarateurs: liste_declarateurs ',' . declarateur

    IDENTIFICATEUR  shift, and go to state 28

    declarateur  go to state 29


State 22

   10 declarateur: declarateur '[' . CONSTANTE ']'

    CONSTANTE  shift, and go to state 30


State 23

   12 fonction: EXTERN type IDENTIFICATEUR '(' . liste_parms ')' ';'

    INT  shift, and go to state 24

    $default  reduce using rule 19 (liste_parms)

    create_liste_param  go to state 25
    liste_parms         go to state 31
    parm                go to state 27


State 24

   20 parm: INT . IDENTIFICATEUR

    IDENTIFICATEUR  shift, and go to state 32


State 25

   15 create_liste_param: create_liste_param . ',' parm
   18 liste_parms: create_liste_param .

    ','  shift, and go to state 33

    ','       [reduce using rule 18 (liste_parms)]
    $default  reduce using rule 18 (liste_parms)


State 26

   11 fonction: type IDENTIFICATEUR '(' liste_parms . ')' '{' liste_declarations liste_instructions '}'
   17 liste_parms: liste_parms . ',' parm

    ','  shift, and go to state 34
    ')'  shift, and go to state 35


State 27

   16 create_liste_param: parm .

    $default  reduce using rule 16 (create_liste_param)


State 28

    9 declarateur: IDENTIFICATEUR .

    $default  reduce using rule 9 (declarateur)


State 29

    7 liste_declarateurs: liste_declarateurs ',' declarateur .
   10 declarateur: declarateur . '[' CONSTANTE ']'

    '['  shift, and go to state 22

    $default  reduce using rule 7 (liste_declarateurs)


State 30

   10 declarateur: declarateur '[' CONSTANTE . ']'

    ']'  shift, and go to state 36


State 31

   12 fonction: EXTERN type IDENTIFICATEUR '(' liste_parms . ')' ';'
   17 liste_parms: liste_parms . ',' parm

    ','  shift, and go to state 34
    ')'  shift, and go to state 37


State 32

   20 parm: INT IDENTIFICATEUR .

    $default  reduce using rule 20 (parm)


State 33

   15 create_liste_param: create_liste_param ',' . parm

    INT  shift, and go to state 24

    parm  go to state 38


State 34

   17 liste_parms: liste_parms ',' . parm

    INT  shift, and go to state 24

    parm  go to state 39


State 35

   11 fonction: type IDENTIFICATEUR '(' liste_parms ')' . '{' liste_declarations liste_instructions '}'

    '{'  shift, and go to state 40


State 36

   10 declarateur: declarateur '[' CONSTANTE ']' .

    $default  reduce using rule 10 (declarateur)


State 37

   12 fonction: EXTERN type IDENTIFICATEUR '(' liste_parms ')' . ';'

    ';'  shift, and go to state 41


State 38

   15 create_liste_param: create_liste_param ',' parm .

    $default  reduce using rule 15 (create_liste_param)


State 39

   17 liste_parms: liste_parms ',' parm .

    $default  reduce using rule 17 (liste_parms)


State 40

   11 fonction: type IDENTIFICATEUR '(' liste_parms ')' '{' . liste_declarations liste_instructions '}'

    $default  reduce using rule 3 (liste_declarations)

    liste_declarations  go to state 42


State 41

   12 fonction: EXTERN type IDENTIFICATEUR '(' liste_parms ')' ';' .

    $default  reduce using rule 12 (fonction)


State 42

    2 liste_declarations: liste_declarations . declaration
   11 fonction: type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations . liste_instructions '}'

    INT   shift, and go to state 4
    VOID  shift, and go to state 5

    $default  reduce using rule 22 (liste_instructions)

    declaration         go to state 8
    type                go to state 43
    liste_instructions  go to state 44


State 43

    6 declaration: type . liste_declarateurs ';'

    IDENTIFICATEUR  shift, and go to state 28

    liste_declarateurs  go to state 15
    declarateur         go to state 16


State 44

   11 fonction: type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions . '}'
   21 liste_instructions: liste_instructions . instruction

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54
    '}'             shift, and go to state 55

    instruction  go to state 56
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 45

   42 appel: IDENTIFICATEUR . '(' liste_expressions ')' ';'
   43 variable: IDENTIFICATEUR .
   45 tableau: IDENTIFICATEUR .

    '('  shift, and go to state 65

    '['       reduce using rule 45 (tableau)
    '='       reduce using rule 43 (variable)
    '='       [reduce using rule 45 (tableau)]
    $default  reduce using rule 43 (variable)


State 46

   29 iteration: FOR . '(' affectation ';' condition ';' affectation ')' instruction

    '('  shift, and go to state 66


State 47

   30 iteration: WHILE . '(' condition ')' instruction

    '('  shift, and go to state 67


State 48

   31 selection: IF . '(' condition ')' instruction
   32          | IF . '(' condition ')' instruction ELSE instruction

    '('  shift, and go to state 68


State 49

   33 selection: SWITCH . '(' expression ')' instruction

    '('  shift, and go to state 69


State 50

   34 selection: CASE . CONSTANTE ':' instruction
   35          | CASE . CONSTANTE ':' instruction saut

    CONSTANTE  shift, and go to state 70


State 51

   36 selection: DEFAULT . ':' instruction

    ':'  shift, and go to state 71


State 52

   37 saut: BREAK . ';'

    ';'  shift, and go to state 72


State 53

   38 saut: RETURN . ';'
   39     | RETURN . expression ';'

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    ';'             shift, and go to state 76
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 79


State 54

   41 bloc: '{' . liste_declarations liste_instructions '}'

    $default  reduce using rule 3 (liste_declarations)

    liste_declarations  go to state 80


State 55

   11 fonction: type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions '}' .

    $default  reduce using rule 11 (fonction)


State 56

   21 liste_instructions: liste_instructions instruction .

    $default  reduce using rule 21 (liste_instructions)


State 57

   23 instruction: iteration .

    $default  reduce using rule 23 (instruction)


State 58

   24 instruction: selection .

    $default  reduce using rule 24 (instruction)


State 59

   25 instruction: saut .

    $default  reduce using rule 25 (instruction)


State 60

   26 instruction: affectation . ';'

    ';'  shift, and go to state 81


State 61

   27 instruction: bloc .

    $default  reduce using rule 27 (instruction)


State 62

   28 instruction: appel .

    $default  reduce using rule 28 (instruction)


State 63

   40 affectation: variable . '=' expression

    '='  shift, and go to state 82


State 64

   44 variable: tableau .
   46 tableau: tableau . '[' expression ']'

    '['  shift, and go to state 83

    $default  reduce using rule 44 (variable)


State 65

   42 appel: IDENTIFICATEUR '(' . liste_expressions ')' ';'

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    $default  reduce using rule 61 (liste_expressions)

    variable           go to state 78
    tableau            go to state 64
    expression         go to state 84
    liste_expressions  go to state 85
    create_expr_liste  go to state 86


State 66

   29 iteration: FOR '(' . affectation ';' condition ';' affectation ')' instruction

    IDENTIFICATEUR  shift, and go to state 87

    affectation  go to state 88
    variable     go to state 63
    tableau      go to state 64


State 67

   30 iteration: WHILE '(' . condition ')' instruction

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 91
    condition   go to state 92


State 68

   31 selection: IF '(' . condition ')' instruction
   32          | IF '(' . condition ')' instruction ELSE instruction

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 91
    condition   go to state 93


State 69

   33 selection: SWITCH '(' . expression ')' instruction

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 94


State 70

   34 selection: CASE CONSTANTE . ':' instruction
   35          | CASE CONSTANTE . ':' instruction saut

    ':'  shift, and go to state 95


State 71

   36 selection: DEFAULT ':' . instruction

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54

    instruction  go to state 96
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 72

   37 saut: BREAK ';' .

    $default  reduce using rule 37 (saut)


State 73

   43 variable: IDENTIFICATEUR .
   45 tableau: IDENTIFICATEUR .
   59 expression: IDENTIFICATEUR . '(' liste_expressions ')'

    '('  shift, and go to state 97

    PLUS      reduce using rule 43 (variable)
    PLUS      [reduce using rule 45 (tableau)]
    MOINS     reduce using rule 43 (variable)
    MOINS     [reduce using rule 45 (tableau)]
    MUL       reduce using rule 43 (variable)
    MUL       [reduce using rule 45 (tableau)]
    DIV       reduce using rule 43 (variable)
    DIV       [reduce using rule 45 (tableau)]
    LSHIFT    reduce using rule 43 (variable)
    LSHIFT    [reduce using rule 45 (tableau)]
    RSHIFT    reduce using rule 43 (variable)
    RSHIFT    [reduce using rule 45 (tableau)]
    BAND      reduce using rule 43 (variable)
    BAND      [reduce using rule 45 (tableau)]
    BOR       reduce using rule 43 (variable)
    BOR       [reduce using rule 45 (tableau)]
    GEQ       reduce using rule 43 (variable)
    GEQ       [reduce using rule 45 (tableau)]
    LEQ       reduce using rule 43 (variable)
    LEQ       [reduce using rule 45 (tableau)]
    EQ        reduce using rule 43 (variable)
    EQ        [reduce using rule 45 (tableau)]
    NEQ       reduce using rule 43 (variable)
    NEQ       [reduce using rule 45 (tableau)]
    LAND      reduce using rule 43 (variable)
    LAND      [reduce using rule 45 (tableau)]
    LOR       reduce using rule 43 (variable)
    LOR       [reduce using rule 45 (tableau)]
    LT        reduce using rule 43 (variable)
    LT        [reduce using rule 45 (tableau)]
    GT        reduce using rule 43 (variable)
    GT        [reduce using rule 45 (tableau)]
    ';'       reduce using rule 43 (variable)
    ';'       [reduce using rule 45 (tableau)]
    ','       reduce using rule 43 (variable)
    ','       [reduce using rule 45 (tableau)]
    '['       reduce using rule 45 (tableau)
    ']'       reduce using rule 43 (variable)
    ']'       [reduce using rule 45 (tableau)]
    ')'       reduce using rule 43 (variable)
    ')'       [reduce using rule 45 (tableau)]
    $default  reduce using rule 43 (variable)


State 74

   57 expression: CONSTANTE .

    $default  reduce using rule 57 (expression)


State 75

   56 expression: MOINS . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 98


State 76

   38 saut: RETURN ';' .

    $default  reduce using rule 38 (saut)


State 77

   47 expression: '(' . expression ')'

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 99


State 78

   58 expression: variable .

    $default  reduce using rule 58 (expression)


State 79

   39 saut: RETURN expression . ';'
   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    ';'     shift, and go to state 108


State 80

    2 liste_declarations: liste_declarations . declaration
   41 bloc: '{' liste_declarations . liste_instructions '}'

    INT   shift, and go to state 4
    VOID  shift, and go to state 5

    $default  reduce using rule 22 (liste_instructions)

    declaration         go to state 8
    type                go to state 43
    liste_instructions  go to state 109


State 81

   26 instruction: affectation ';' .

    $default  reduce using rule 26 (instruction)


State 82

   40 affectation: variable '=' . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 110


State 83

   46 tableau: tableau '[' . expression ']'

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 111


State 84

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression
   63 create_expr_liste: expression .

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 63 (create_expr_liste)


State 85

   42 appel: IDENTIFICATEUR '(' liste_expressions . ')' ';'

    ')'  shift, and go to state 112


State 86

   60 liste_expressions: create_expr_liste .
   62 create_expr_liste: create_expr_liste . ',' expression

    ','  shift, and go to state 113

    $default  reduce using rule 60 (liste_expressions)


State 87

   43 variable: IDENTIFICATEUR .
   45 tableau: IDENTIFICATEUR .

    '['       reduce using rule 45 (tableau)
    '='       reduce using rule 43 (variable)
    '='       [reduce using rule 45 (tableau)]
    $default  reduce using rule 43 (variable)


State 88

   29 iteration: FOR '(' affectation . ';' condition ';' affectation ')' instruction

    ';'  shift, and go to state 114


State 89

   64 condition: NOT . '(' condition ')'

    '('  shift, and go to state 115


State 90

   47 expression: '(' . expression ')'
   66 condition: '(' . condition ')'

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 116
    condition   go to state 117


State 91

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression
   67 condition: expression . binary_comp expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    GEQ     shift, and go to state 118
    LEQ     shift, and go to state 119
    EQ      shift, and go to state 120
    NEQ     shift, and go to state 121
    LT      shift, and go to state 122
    GT      shift, and go to state 123

    binary_comp  go to state 124


State 92

   30 iteration: WHILE '(' condition . ')' instruction
   65 condition: condition . binary_rel condition

    LAND  shift, and go to state 125
    LOR   shift, and go to state 126
    ')'   shift, and go to state 127

    binary_rel  go to state 128


State 93

   31 selection: IF '(' condition . ')' instruction
   32          | IF '(' condition . ')' instruction ELSE instruction
   65 condition: condition . binary_rel condition

    LAND  shift, and go to state 125
    LOR   shift, and go to state 126
    ')'   shift, and go to state 129

    binary_rel  go to state 128


State 94

   33 selection: SWITCH '(' expression . ')' instruction
   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    ')'     shift, and go to state 130


State 95

   34 selection: CASE CONSTANTE ':' . instruction
   35          | CASE CONSTANTE ':' . instruction saut

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54

    instruction  go to state 131
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 96

   36 selection: DEFAULT ':' instruction .

    $default  reduce using rule 36 (selection)


State 97

   59 expression: IDENTIFICATEUR '(' . liste_expressions ')'

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    $default  reduce using rule 61 (liste_expressions)

    variable           go to state 78
    tableau            go to state 64
    expression         go to state 84
    liste_expressions  go to state 132
    create_expr_liste  go to state 86


State 98

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression
   56           | MOINS expression .

    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 56 (expression)


State 99

   47 expression: '(' expression . ')'
   48           | expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    ')'     shift, and go to state 133


State 100

   48 expression: expression PLUS . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 134


State 101

   49 expression: expression MOINS . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 135


State 102

   51 expression: expression MUL . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 136


State 103

   50 expression: expression DIV . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 137


State 104

   53 expression: expression LSHIFT . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 138


State 105

   52 expression: expression RSHIFT . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 139


State 106

   54 expression: expression BAND . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 140


State 107

   55 expression: expression BOR . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 141


State 108

   39 saut: RETURN expression ';' .

    $default  reduce using rule 39 (saut)


State 109

   21 liste_instructions: liste_instructions . instruction
   41 bloc: '{' liste_declarations liste_instructions . '}'

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54
    '}'             shift, and go to state 142

    instruction  go to state 56
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 110

   40 affectation: variable '=' expression .
   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 40 (affectation)


State 111

   46 tableau: tableau '[' expression . ']'
   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    ']'     shift, and go to state 143


State 112

   42 appel: IDENTIFICATEUR '(' liste_expressions ')' . ';'

    ';'  shift, and go to state 144


State 113

   62 create_expr_liste: create_expr_liste ',' . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 145


State 114

   29 iteration: FOR '(' affectation ';' . condition ';' affectation ')' instruction

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 91
    condition   go to state 146


State 115

   64 condition: NOT '(' . condition ')'

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 91
    condition   go to state 147


State 116

   47 expression: '(' expression . ')'
   48           | expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression
   67 condition: expression . binary_comp expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    GEQ     shift, and go to state 118
    LEQ     shift, and go to state 119
    EQ      shift, and go to state 120
    NEQ     shift, and go to state 121
    LT      shift, and go to state 122
    GT      shift, and go to state 123
    ')'     shift, and go to state 133

    binary_comp  go to state 124


State 117

   65 condition: condition . binary_rel condition
   66          | '(' condition . ')'

    LAND  shift, and go to state 125
    LOR   shift, and go to state 126
    ')'   shift, and go to state 148

    binary_rel  go to state 128


State 118

   72 binary_comp: GEQ .

    $default  reduce using rule 72 (binary_comp)


State 119

   73 binary_comp: LEQ .

    $default  reduce using rule 73 (binary_comp)


State 120

   74 binary_comp: EQ .

    $default  reduce using rule 74 (binary_comp)


State 121

   75 binary_comp: NEQ .

    $default  reduce using rule 75 (binary_comp)


State 122

   70 binary_comp: LT .

    $default  reduce using rule 70 (binary_comp)


State 123

   71 binary_comp: GT .

    $default  reduce using rule 71 (binary_comp)


State 124

   67 condition: expression binary_comp . expression

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    '('             shift, and go to state 77

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 149


State 125

   68 binary_rel: LAND .

    $default  reduce using rule 68 (binary_rel)


State 126

   69 binary_rel: LOR .

    $default  reduce using rule 69 (binary_rel)


State 127

   30 iteration: WHILE '(' condition ')' . instruction

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54

    instruction  go to state 150
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 128

   65 condition: condition binary_rel . condition

    IDENTIFICATEUR  shift, and go to state 73
    CONSTANTE       shift, and go to state 74
    MOINS           shift, and go to state 75
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 78
    tableau     go to state 64
    expression  go to state 91
    condition   go to state 151


State 129

   31 selection: IF '(' condition ')' . instruction
   32          | IF '(' condition ')' . instruction ELSE instruction

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54

    instruction  go to state 152
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 130

   33 selection: SWITCH '(' expression ')' . instruction

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54

    instruction  go to state 153
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 131

   34 selection: CASE CONSTANTE ':' instruction .
   35          | CASE CONSTANTE ':' instruction . saut

    BREAK   shift, and go to state 52
    RETURN  shift, and go to state 53

    BREAK     [reduce using rule 34 (selection)]
    RETURN    [reduce using rule 34 (selection)]
    $default  reduce using rule 34 (selection)

    saut  go to state 154


State 132

   59 expression: IDENTIFICATEUR '(' liste_expressions . ')'

    ')'  shift, and go to state 155


State 133

   47 expression: '(' expression ')' .

    $default  reduce using rule 47 (expression)


State 134

   48 expression: expression . PLUS expression
   48           | expression PLUS expression .
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 48 (expression)


State 135

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   49           | expression MOINS expression .
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 49 (expression)


State 136

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   51           | expression MUL expression .
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 51 (expression)


State 137

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   50           | expression DIV expression .
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 50 (expression)


State 138

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   53           | expression LSHIFT expression .
   54           | expression . BAND expression
   55           | expression . BOR expression

    BAND  shift, and go to state 106
    BOR   shift, and go to state 107

    $default  reduce using rule 53 (expression)


State 139

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   52           | expression RSHIFT expression .
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression

    BAND  shift, and go to state 106
    BOR   shift, and go to state 107

    $default  reduce using rule 52 (expression)


State 140

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   54           | expression BAND expression .
   55           | expression . BOR expression

    $default  reduce using rule 54 (expression)


State 141

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression
   55           | expression BOR expression .

    $default  reduce using rule 55 (expression)


State 142

   41 bloc: '{' liste_declarations liste_instructions '}' .

    $default  reduce using rule 41 (bloc)


State 143

   46 tableau: tableau '[' expression ']' .

    $default  reduce using rule 46 (tableau)


State 144

   42 appel: IDENTIFICATEUR '(' liste_expressions ')' ';' .

    $default  reduce using rule 42 (appel)


State 145

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression
   62 create_expr_liste: create_expr_liste ',' expression .

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 62 (create_expr_liste)


State 146

   29 iteration: FOR '(' affectation ';' condition . ';' affectation ')' instruction
   65 condition: condition . binary_rel condition

    LAND  shift, and go to state 125
    LOR   shift, and go to state 126
    ';'   shift, and go to state 156

    binary_rel  go to state 128


State 147

   64 condition: NOT '(' condition . ')'
   65          | condition . binary_rel condition

    LAND  shift, and go to state 125
    LOR   shift, and go to state 126
    ')'   shift, and go to state 157

    binary_rel  go to state 128


State 148

   66 condition: '(' condition ')' .

    $default  reduce using rule 66 (condition)


State 149

   48 expression: expression . PLUS expression
   49           | expression . MOINS expression
   50           | expression . DIV expression
   51           | expression . MUL expression
   52           | expression . RSHIFT expression
   53           | expression . LSHIFT expression
   54           | expression . BAND expression
   55           | expression . BOR expression
   67 condition: expression binary_comp expression .

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 67 (condition)


State 150

   30 iteration: WHILE '(' condition ')' instruction .

    $default  reduce using rule 30 (iteration)


State 151

   65 condition: condition . binary_rel condition
   65          | condition binary_rel condition .

    $default  reduce using rule 65 (condition)

    binary_rel  go to state 128


State 152

   31 selection: IF '(' condition ')' instruction .
   32          | IF '(' condition ')' instruction . ELSE instruction

    ELSE  shift, and go to state 158

    $default  reduce using rule 31 (selection)


State 153

   33 selection: SWITCH '(' expression ')' instruction .

    $default  reduce using rule 33 (selection)


State 154

   35 selection: CASE CONSTANTE ':' instruction saut .

    $default  reduce using rule 35 (selection)


State 155

   59 expression: IDENTIFICATEUR '(' liste_expressions ')' .

    $default  reduce using rule 59 (expression)


State 156

   29 iteration: FOR '(' affectation ';' condition ';' . affectation ')' instruction

    IDENTIFICATEUR  shift, and go to state 87

    affectation  go to state 159
    variable     go to state 63
    tableau      go to state 64


State 157

   64 condition: NOT '(' condition ')' .

    $default  reduce using rule 64 (condition)


State 158

   32 selection: IF '(' condition ')' instruction ELSE . instruction

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54

    instruction  go to state 160
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 159

   29 iteration: FOR '(' affectation ';' condition ';' affectation . ')' instruction

    ')'  shift, and go to state 161


State 160

   32 selection: IF '(' condition ')' instruction ELSE instruction .

    $default  reduce using rule 32 (selection)


State 161

   29 iteration: FOR '(' affectation ';' condition ';' affectation ')' . instruction

    IDENTIFICATEUR  shift, and go to state 45
    FOR             shift, and go to state 46
    WHILE           shift, and go to state 47
    IF              shift, and go to state 48
    SWITCH          shift, and go to state 49
    CASE            shift, and go to state 50
    DEFAULT         shift, and go to state 51
    BREAK           shift, and go to state 52
    RETURN          shift, and go to state 53
    '{'             shift, and go to state 54

    instruction  go to state 162
    iteration    go to state 57
    selection    go to state 58
    saut         go to state 59
    affectation  go to state 60
    bloc         go to state 61
    appel        go to state 62
    variable     go to state 63
    tableau      go to state 64


State 162

   29 iteration: FOR '(' affectation ';' condition ';' affectation ')' instruction .

    $default  reduce using rule 29 (iteration)
